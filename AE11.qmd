---
title : "Interactive Visualizations"
date: "04/04/2024"
author: "Oskar Diyali"
formal : html
---

```{r read_packages}

library(plotly)
library(ggiraph)
library(tidyverse)
library(tidycensus)
library(sf)
library(leaflet)
library(openintro)
library(patchwork)
library(readr)

```

### Part 0

### Making Plots Interactive

```{r interactive_plots}

df_hist<-
duke_forest |>
  mutate(garage = if_else(str_detect(parking, "Garage"), "Garage", "No garage")) |>
  ggplot(aes(x = price, fill = garage)) +
  geom_histogram() +
  facet_wrap(~garage, ncol = 1) +
  labs(
    x = "Price in $",
    y = "",
    title = "Histogram of Price of Homes by Garage or not",
    fill = "Garage or not"
  )
```


```{r interactive_plots_2}
df_scatter<-
  ggplot(
  duke_forest,
  aes(x = area, y = price, color = year_built)) +
  geom_point(size = 3) +
  geom_smooth(se = FALSE) +
  labs(
    x = "Area of Home",
    y = "Price of Home",
    title = "Relationship between Price and Area by Year Built",
    color = "Year Built"
  )

df_hist + df_scatter

```

` # See https://patchwork.data-imaginist.com/articles/patchwork.html `


### Part 1

Make the histogram interactive using 'ggigraph'.

```{r ggigraph}

df_hist_ggigraph<-
duke_forest |>
  mutate(garage = if_else(str_detect(parking, "Garage"), "Garage", "No garage")) |>
  ggplot(aes(x = price, fill = garage)) +
  
  geom_histogram_interactive(aes(tooltip = paste0("Number of Homes\n", after_stat(count)))) +
  facet_wrap(~garage, ncol = 1) +
  labs(
    x = "Price in $",
    y = "",
    title = "Histogram of Price of Homes by Garage or not",
    fill = "Garage or not"
  )

girafe(ggobj=df_hist_ggigraph)
df_hist_ggigraph

```



Make a scatterplot interactive using 'ggigraph'.

```{r ggigraph_scatterplot}


df_scatter_int <-
  
  ggplot(duke_forest, aes(x = price, y = year_built, color = year_built)) +
  
  geom_point_interactive(mapping = aes(tooltip = address ), size = 3) +
  geom_smooth(se= FALSE) +
  labs(
    x = "Area of House",
    y = "Price of House",
    title = "Relationship between Price and Area by Year Built",
    color = "Year Built"
  ) +theme_minimal()

girafe(ggobj = df_scatter_int)

df_scatter_int
```


Make a scatterplot interactive.

```{r scatterplot_interactive}


df_scatter_int <-
  
  ggplot(duke_forest, aes(x = price, y = year_built, color = year_built)) +
  
  geom_point_interactive(mapping = aes(tooltip = scales::dollar(price)), size = 3) +
  geom_smooth(se= FALSE) +
  labs(
    x = "Area of House",
    y = "Price of House",
    title = "Relationship between Price and Area by Year Built",
    color = "Year Built"
  ) +theme_minimal()

girafe(ggobj = df_scatter_int)

df_scatter_int
```

Make histogram interactive using `ploty`

```{r histo-ploty}

ggplotly(df_hist)

```


Make scatterplot interactive using `ploty`

```{r scat-ploty}

ggplotly(df_scatter)

```

### Mapping

Make Static Visualization on a US State.


```{r census}

census_api_key("943880cb49274f5dcad5a5a080efa4cd7a1f5900", 
               overwrite=TRUE, install = TRUE) #once
```

```{r load}

d10 <- load_variables(2010, "sf1", cache = TRUE)

head(d10)

my_variables <- c("PCT012I188, PCT012L001")

#H001001	Total	HOUSING UNITS		
#H002001	Total	URBAN AND RURAL		
#H002002	Total!!Urban	URBAN AND RURAL		
#H002003	Total!!Urban!!Inside urbanized areas	URBAN AND RURAL		
#H002004	Total!!Urban!!Inside urban clusters	URBAN AND RURAL		
#H002005	Total!!Rural	URBAN AND RURAL

```

```{r geo-ia}
ia <- get_decennial(geography = "county", 
        year = 2010,
        variables = c(t_houseunits = "H001001"), 
        state = "IA",
        output = "wide",
        geometry = T,
        cache_table = T)


```


```{r stat-vis}

ia_ggplot_map3 <- 
 ia |> 
    mutate(centroid = st_coordinates(st_centroid(geometry))) |>
    ggplot() + 
      geom_sf(color = "white", fill ="forestgreen") +
      geom_point(aes(x=centroid[,1], y=centroid[,2],
                     size=t_houseunits))+
          labs(title = "Total Housing Units by County",
               subtitle = "2010 US Census")+
          theme_void()+
    scale_size_continuous(range = c(1, 5)) 

ia_ggplot_map3

```

Leaflet Map
```{r leaflet_map}

ia_wgs84 <- ia |> st_transform(crs = 4326) |> 
  mutate(centroid = st_centroid(geometry))


ia_leaf <- ia_wgs84 |>
  leaflet() %>%
  addPolygons(color = "purple", 
              weight = 1,
              smoothFactor = 0.5,
              opacity = 1.0,
              fillOpacity = 0.5,
              highlightOptions = 
                highlightOptions(color = "white",
                                  weight = 2,
                                  bringToFront = TRUE)) %>%
  leaflet::addCircleMarkers(lat = ~st_coordinates(centroid)[,"Y"],
                             lng = ~st_coordinates(centroid)[,"X"],
                             radius = ~t_houseunits/50000,
                             popup = ~NAME,
                             fillOpacity = 1,
                             opacity = 1) 

ia_leaf

```


